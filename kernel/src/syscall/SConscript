# -*- mode: python -*-
Import('env')

# Compile the sources.
objects = env.Object([
    'close.c',
    '_exit.c',
    'fcntl.c',
    'fork.c',
    'getcwd.c',
    'getegid.c',
    'geteuid.c',
    'getgid.c',
    'getpgid.c',
    'getpid.c',
    'getppid.c',
    'getuid.c',
    'isatty.c',
    'init.c',
    'open.c',
    'read.c',
    'sbrk.c',
    'setpgid.c',
    'sigaction.c',
    'sigfillset.c',
    'sigprocmask.c',
    'stat.c',
    'tcgetpgrp.c',
    'tcsetpgrp.c',
    'waitpid.c',
    'write.c',
])

syscalls = env.Command(
    ['syscalls.c', '#bld/$T/kernel/include/syscalls/syscalls.h'],
    ['mksyscalls.py', 'syscalls.yml'],
    Action('$MKSYSCALLSCOM', '$MKSYSCALLSCOMSTR'),
)
env['MKSYSCALLSCOM'] = 'python ${SOURCES[0]} -i ${SOURCES[1]} -s ${TARGETS[0]} -h ${TARGETS[1]}'
if not env['V']:
    env['MKSYSCALLSCOMSTR'] = '  MKSYSCALLS        $TARGET'
objects += env.Object(syscalls[0])

Return(['objects'])
