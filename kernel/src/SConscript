# -*- mode: python -*-
Import('env')

# Create the SCons environment.
env = env.Clone(
    CC = 'toolchain/install/bin/i686-pc-tacoskernel-gcc',
    CCFLAGS = [
        '-Wall',
        '-Wextra',
        '-Werror',
        '-Wno-unused-parameter',
        '-Wdeclaration-after-statement',
        '-Wstack-usage=512',
        '-ffreestanding',
        '-fstack-protector-all',
        '-fno-exceptions',
        '-fstack-usage',
        '-fno-delete-null-pointer-checks',
        '-fno-omit-frame-pointer',
        '-std=c99',
        '-pedantic',
        '-gstabs+',
        '-g3',
        '-O0' if env['T'] == 'debug' else '-O2',
    ],
    ASFLAGS = [
        '-gstabs+',
        '-g3',
        '-O0' if env['T'] == 'debug' else '-O2',
    ],
    LINKFLAGS = [
        '-ffreestanding',
        '-nostdlib',
        '-Wl,--fatal-warnings',
        '-Wl,--gc-sections',
        '-Wl,--print-gc-sections',
        '-Wl,-z,defs',
        '-T$LDSCRIPT',
    ],
    CPPPATH = [
        '#kernel/include',
    ],
)

# Compile the sources.
objects, boot = env.SConscript(dirs = 'asm', exports = 'env')
objects += env.SConscript(
    dirs = [
        'ide',
        'syscall',
    ],
    exports = [
        'env',
    ],
)
objects += env.Object([
    'fpu.c',
    'interrupts.c',
    'iso9660.c',
    'kmain.c',
    'kmalloc.c',
    'kprintf.c',
    'mmu.c',
    'panic.c',
    'pic.c',
    'sbrk.c',
    'screen.c',
    'snprintf.c',
    'string.c',
])

# Compile ssp.c with stack protection disabled.
nosspenv = env.Clone()
nosspenv.Append(CCFLAGS=['-fno-stack-protector'])
objects += nosspenv.Object('ssp.c')

# Link all the object files together to create the kernel
ldscript = env.Sed(
    'ld/link.ld', 'ld/link.ld.in',
    PATTERN='s:@@STARTUP@@:$STARTUP:g',
    STARTUP=boot,
)
kernel = env.Program('tacos.bin', objects, LDSCRIPT=ldscript)
env.Depends(kernel, ldscript)
env.Depends(kernel, boot)
env.Alias('tacos', kernel)

Return(['kernel'])
